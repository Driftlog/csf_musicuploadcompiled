{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Router } from '@angular/router';\nimport { Component, ViewChild, inject } from '@angular/core';\nimport { UploadService } from 'src/app/upload.service';\nexport let UploadpageComponent = class UploadpageComponent {\n  constructor() {\n    this.fileList = [];\n    this.router = inject(Router);\n    this.uploadSvc = inject(UploadService);\n  }\n  uploadMusic() {\n    this.router.navigate(['/playmusic']);\n  }\n  listFiles(event) {\n    Array.from(event.target.files).forEach(value => {\n      if (!this.fileList.includes(value.name)) {\n        this.fileList.push(value.name);\n      }\n    });\n  }\n};\n__decorate([ViewChild('files')], UploadpageComponent.prototype, \"files\", void 0);\nUploadpageComponent = __decorate([Component({\n  selector: 'app-uploadpage',\n  templateUrl: './uploadpage.component.html',\n  styleUrls: ['./uploadpage.component.css']\n})], UploadpageComponent);","map":{"version":3,"names":["Router","Component","ViewChild","inject","UploadService","UploadpageComponent","constructor","fileList","router","uploadSvc","uploadMusic","navigate","listFiles","event","Array","from","target","files","forEach","value","includes","name","push","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Mark\\Desktop\\Angular\\musicupload\\src\\app\\components\\uploadpage\\uploadpage.component.ts"],"sourcesContent":["import { Router } from '@angular/router';\nimport { Component, ElementRef, ViewChild, inject } from '@angular/core';\nimport { UploadService } from 'src/app/upload.service';\n\n@Component({\n  selector: 'app-uploadpage',\n  templateUrl: './uploadpage.component.html',\n  styleUrls: ['./uploadpage.component.css']\n})\nexport class UploadpageComponent {\n\n  @ViewChild('files') files !: ElementRef;\n\n  fileList : string[] = [];\n\n\n  router = inject(Router)\n  uploadSvc = inject(UploadService)\n\n  uploadMusic() {\n    this.router.navigate(['/playmusic'])\n  }\n\n  listFiles(event: any) {\n\n    Array.from(event.target.files).forEach((value : any) => {\n      if (!this.fileList.includes(value.name)) {\n        this.fileList.push(value.name)\n      }\n     })\n\n  }\n\n}\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,iBAAiB;AACxC,SAASC,SAAS,EAAcC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACxE,SAASC,aAAa,QAAQ,wBAAwB;AAO/C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAAzBC,YAAA;IAIL,KAAAC,QAAQ,GAAc,EAAE;IAGxB,KAAAC,MAAM,GAAGL,MAAM,CAACH,MAAM,CAAC;IACvB,KAAAS,SAAS,GAAGN,MAAM,CAACC,aAAa,CAAC;EAgBnC;EAdEM,WAAWA,CAAA;IACT,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;EAEAC,SAASA,CAACC,KAAU;IAElBC,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAACC,OAAO,CAAEC,KAAW,IAAI;MACrD,IAAI,CAAC,IAAI,CAACZ,QAAQ,CAACa,QAAQ,CAACD,KAAK,CAACE,IAAI,CAAC,EAAE;QACvC,IAAI,CAACd,QAAQ,CAACe,IAAI,CAACH,KAAK,CAACE,IAAI,CAAC;;IAEjC,CAAC,CAAC;EAEL;CAED;AAtBqBE,UAAA,EAAnBrB,SAAS,CAAC,OAAO,CAAC,C,iDAAqB;AAF7BG,mBAAmB,GAAAkB,UAAA,EAL/BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWrB,mBAAmB,CAwB/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}