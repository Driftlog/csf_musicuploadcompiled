{"ast":null,"code":"var _class;\nimport { Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { UploadService } from 'src/app/upload.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"files\"];\nfunction UploadpageComponent_span_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r3, \" \");\n  }\n}\nfunction UploadpageComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, UploadpageComponent_span_9_div_1_Template, 2, 1, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.fileList);\n  }\n}\nexport class UploadpageComponent {\n  constructor() {\n    this.fileList = [];\n    this.router = inject(Router);\n    this.uploadSvc = inject(UploadService);\n  }\n  uploadMusic() {\n    console.log(this.files.nativeElement);\n    // this.uploadSvc.uploadFiles(this.files.nativeElement)\n    // this.router.navigate(['/playmusic'])\n  }\n\n  listFiles(event) {\n    const fileArr = Array.from(event.target.files);\n    fileArr.forEach(value => {\n      if (!this.fileList.includes(value.name)) {\n        this.fileList.push(value.name);\n      }\n    });\n  }\n}\n_class = UploadpageComponent;\n_class.ɵfac = function UploadpageComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-uploadpage\"]],\n  viewQuery: function UploadpageComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.files = _t.first);\n    }\n  },\n  decls: 10,\n  vars: 2,\n  consts: [[\"type\", \"file\", \"placeholder\", \"Upload your files here\", \"multiple\", \"\", 3, \"change\"], [\"files\", \"\"], [3, \"disabled\", \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function UploadpageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \" Upload Your Music Files Here!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 0, 1);\n      i0.ɵɵlistener(\"change\", function UploadpageComponent_Template_input_change_2_listener($event) {\n        return ctx.listFiles($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function UploadpageComponent_Template_button_click_5_listener() {\n        return ctx.uploadMusic();\n      });\n      i0.ɵɵtext(6, \" Submit files \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"h2\");\n      i0.ɵɵtext(8, \" List of Files \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, UploadpageComponent_span_9_Template, 2, 1, \"span\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", !ctx.fileList);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.fileList);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Router","inject","UploadService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","item_r3","ɵɵtemplate","UploadpageComponent_span_9_div_1_Template","ɵɵproperty","ctx_r1","fileList","UploadpageComponent","constructor","router","uploadSvc","uploadMusic","console","log","files","nativeElement","listFiles","event","fileArr","Array","from","target","forEach","value","includes","name","push","selectors","viewQuery","UploadpageComponent_Query","rf","ctx","ɵɵlistener","UploadpageComponent_Template_input_change_2_listener","$event","ɵɵelement","UploadpageComponent_Template_button_click_5_listener","UploadpageComponent_span_9_Template"],"sources":["C:\\Users\\Mark\\Desktop\\Angular\\musicupload\\src\\app\\components\\uploadpage\\uploadpage.component.ts","C:\\Users\\Mark\\Desktop\\Angular\\musicupload\\src\\app\\components\\uploadpage\\uploadpage.component.html"],"sourcesContent":["import { Router } from '@angular/router';\nimport { Component, ElementRef, ViewChild, inject } from '@angular/core';\nimport { UploadService } from 'src/app/upload.service';\n\n@Component({\n  selector: 'app-uploadpage',\n  templateUrl: './uploadpage.component.html',\n  styleUrls: ['./uploadpage.component.css']\n})\nexport class UploadpageComponent {\n\n  @ViewChild('files') files !: ElementRef<File[]>;\n\n  fileList : string[] = [];\n\n\n  router = inject(Router)\n  uploadSvc = inject(UploadService)\n\n  uploadMusic() {\n\n    console.log(this.files.nativeElement)\n    // this.uploadSvc.uploadFiles(this.files.nativeElement)\n\n    // this.router.navigate(['/playmusic'])\n  }\n\n  listFiles(event: any) {\n\n    const fileArr : File[] = Array.from(event.target.files)\n\n    fileArr.forEach((value: File) => {\n      if (!this.fileList.includes(value.name)) {\n        this.fileList.push(value.name)\n      }\n     })\n\n  }\n\n\n\n\n\n}\n","  <h1> Upload Your Music Files Here!</h1>\n\n  <input type=\"file\" placeholder=\"Upload your files here\" multiple #files (change)=\"listFiles($event)\">\n  <br>\n  <button (click)=\"uploadMusic()\" [disabled]=\"!fileList\" > Submit files </button>\n\n  <h2> List of Files </h2>\n  <span *ngIf=\"fileList\">\n    <div *ngFor=\"let item of fileList\"> {{item}} </div>\n  </span>\n\n\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,iBAAiB;AACxC,SAA2CC,MAAM,QAAQ,eAAe;AACxE,SAASC,aAAa,QAAQ,wBAAwB;;;;;;ICMlDC,EAAA,CAAAC,cAAA,UAAmC;IAACD,EAAA,CAAAE,MAAA,GAAS;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAfH,EAAA,CAAAI,SAAA,GAAS;IAATJ,EAAA,CAAAK,kBAAA,MAAAC,OAAA,MAAS;;;;;IAD/CN,EAAA,CAAAC,cAAA,WAAuB;IACrBD,EAAA,CAAAO,UAAA,IAAAC,yCAAA,iBAAmD;IACrDR,EAAA,CAAAG,YAAA,EAAO;;;;IADiBH,EAAA,CAAAI,SAAA,GAAW;IAAXJ,EAAA,CAAAS,UAAA,YAAAC,MAAA,CAAAC,QAAA,CAAW;;;ADCrC,OAAM,MAAOC,mBAAmB;EALhCC,YAAA;IASE,KAAAF,QAAQ,GAAc,EAAE;IAGxB,KAAAG,MAAM,GAAGhB,MAAM,CAACD,MAAM,CAAC;IACvB,KAAAkB,SAAS,GAAGjB,MAAM,CAACC,aAAa,CAAC;;EAEjCiB,WAAWA,CAAA;IAETC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACC,aAAa,CAAC;IACrC;IAEA;EACF;;EAEAC,SAASA,CAACC,KAAU;IAElB,MAAMC,OAAO,GAAYC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,CAACP,KAAK,CAAC;IAEvDI,OAAO,CAACI,OAAO,CAAEC,KAAW,IAAI;MAC9B,IAAI,CAAC,IAAI,CAACjB,QAAQ,CAACkB,QAAQ,CAACD,KAAK,CAACE,IAAI,CAAC,EAAE;QACvC,IAAI,CAACnB,QAAQ,CAACoB,IAAI,CAACH,KAAK,CAACE,IAAI,CAAC;;IAEjC,CAAC,CAAC;EAEL;;SA5BWlB,mBAAmB;;mBAAnBA,MAAmB;AAAA;;QAAnBA,MAAmB;EAAAoB,SAAA;EAAAC,SAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;MCT9BnC,EAAA,CAAAC,cAAA,SAAI;MAACD,EAAA,CAAAE,MAAA,qCAA6B;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAEvCH,EAAA,CAAAC,cAAA,kBAAqG;MAA7BD,EAAA,CAAAqC,UAAA,oBAAAC,qDAAAC,MAAA;QAAA,OAAUH,GAAA,CAAAf,SAAA,CAAAkB,MAAA,CAAiB;MAAA,EAAC;MAApGvC,EAAA,CAAAG,YAAA,EAAqG;MACrGH,EAAA,CAAAwC,SAAA,SAAI;MACJxC,EAAA,CAAAC,cAAA,gBAAwD;MAAhDD,EAAA,CAAAqC,UAAA,mBAAAI,qDAAA;QAAA,OAASL,GAAA,CAAApB,WAAA,EAAa;MAAA,EAAC;MAA0BhB,EAAA,CAAAE,MAAA,qBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAE/EH,EAAA,CAAAC,cAAA,SAAI;MAACD,EAAA,CAAAE,MAAA,sBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACxBH,EAAA,CAAAO,UAAA,IAAAmC,mCAAA,kBAEO;;;MALyB1C,EAAA,CAAAI,SAAA,GAAsB;MAAtBJ,EAAA,CAAAS,UAAA,cAAA2B,GAAA,CAAAzB,QAAA,CAAsB;MAG/CX,EAAA,CAAAI,SAAA,GAAc;MAAdJ,EAAA,CAAAS,UAAA,SAAA2B,GAAA,CAAAzB,QAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}